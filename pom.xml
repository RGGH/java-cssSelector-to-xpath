<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!--The identifier of the parent POM-->
    <parent>
		<groupId>org.sam.rosenthal</groupId>
		<artifactId>org.sam.rosenthal.java-cssSelector-to-xpath-parent</artifactId>
		<version>v1.2.1</version>
		<relativePath>./pom.parent.xml</relativePath>
    </parent>
   	<name>java-cssSelector-to-xpath-web</name>
   	<artifactId>org.sam.rosenthal.java-cssSelector-to-xpath-web</artifactId>
   	
	<description>java-cssSelector-to-xpath web</description>
    <packaging>war</packaging>
    
    
	<properties>
		<webpage.version>v1.2.1.${git.commit.time}.${git.commit.id.abbrev}(webpage)</webpage.version>
		<!--<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> -->
		<appengine.app.version>1</appengine.app.version>
		<appengine.target.version>1.9.80</appengine.target.version>
		<appengine-maven-plugin-version>1.9.80</appengine-maven-plugin-version>
		<jetty-version>9.4.8.v20171121</jetty-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
	      <groupId>com.google.cloud.tools</groupId>
	      <artifactId>appengine-plugins-core</artifactId>
	      <version>0.9.0</version>
	    </dependency>
		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-server -->
	    <dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-java</artifactId>
	        <version>4.0.0-alpha-5</version>
	    </dependency>
		<!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
		<dependency>
		    <groupId>io.github.bonigarcia</groupId>
		    <artifactId>webdrivermanager</artifactId>
		    <version>4.0.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-client -->
		<dependency>
		    <groupId>org.eclipse.jetty</groupId>
		    <artifactId>jetty-client</artifactId>
		    <version>9.4.30.v20200611</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.8.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.3.1.RELEASE</version>
	       <exclusions>
	            <exclusion>
	                <groupId>org.springframework.boot</groupId>
	                <artifactId>spring-boot-starter-logging</artifactId>
	            </exclusion>
	           	<exclusion>
		      		<groupId>org.springframework.boot</groupId>
		      		<artifactId>spring-boot-starter-tomcat</artifactId>
		    	</exclusion>
	        </exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-tomcat -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-tomcat</artifactId>
		    <version>2.3.1.RELEASE</version>
		</dependency>
		<dependency>
		  <groupId>javax.servlet</groupId>
		  <artifactId>javax.servlet-api</artifactId>
		  <version>3.1.0</version>
		  <scope>provided</scope>
		</dependency>
		<!-- Exclude any jul-to-slf4j -->
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>jul-to-slf4j</artifactId>
		  <version>1.7.30</version>
		  <scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		      <resource>
		        <directory>src/main/resources</directory>
		        <filtering>true</filtering>
		      </resource>			
			
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>			
			<plugin>
			    <groupId>com.google.cloud.tools</groupId>
			    <artifactId>appengine-maven-plugin</artifactId>
			    <version>2.3.0</version>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>			
			<plugin>
			    <groupId>pl.project13.maven</groupId>
			    <artifactId>git-commit-id-plugin</artifactId>
			    <executions>
			        <execution>
			            <phase>validate</phase>
			            <goals>
			                <goal>revision</goal>
			            </goals>
			        </execution>
			    </executions>
			    <configuration>
			        <dateFormat>yyyyMMdd-HHmmss</dateFormat><!--  human-readable part of the version number -->
			        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
			        <generateGitPropertiesFile>false</generateGitPropertiesFile><!-- somehow necessary. otherwise the variables are not available in the pom -->
			    </configuration>
			</plugin>	
	        <plugin>
	          <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-surefire-plugin</artifactId>
	        </plugin>  				
			<plugin>
			<!-- To run selenium test, use the following command: //mvn failsafe:integration-test
			     Using fail asfe to run sleenium as a failsafe integration test so that travis CI will
			     not try to run selenium when it runs its unit tests -->
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-failsafe-plugin</artifactId>
			  <version>2.22.0</version>
	          <configuration>
	          	<includes>
	          		<include>**/selenium/**</include>
	          	</includes>	
	          </configuration>		  
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
			    <groupId>com.github.eirslett</groupId>
			    <artifactId>frontend-maven-plugin</artifactId>
			    <version>1.10.0</version>
			    <configuration>
			        <workingDirectory>frontend</workingDirectory>
			        <installDirectory>target</installDirectory>
			    </configuration>
			    <executions>
			        <execution>
			            <id>install node and npm</id>
			            <goals>
			                <goal>install-node-and-npm</goal>
			            </goals>
			            <configuration>
			                <nodeVersion>v12.17.0</nodeVersion>
			                <npmVersion>6.14.4</npmVersion>
			            </configuration>
			        </execution>
			        <execution>
			            <id>npm install</id>
			            <goals>
			                <goal>npm</goal>
			            </goals>
			            <configuration>
			                <arguments>install</arguments>
			            </configuration>
			        </execution>
			        <execution>
			            <id>npm run build</id>
			            <goals>
			                <goal>npm</goal>
			            </goals>
			            <configuration>
			                <arguments>run build</arguments>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-antrun-plugin</artifactId>
			  <version>3.0.0</version>
			  <executions>
			    <execution>
			      <id>copy-dependencies</id>
			      <phase>install</phase>
			      <goals>
			        <goal>run</goal>
			      </goals>
			      <configuration>
			        <target>
						<copy todir="${project.build.directory}/classes/static">
					    	<fileset dir="${project.basedir}/frontend/build"/>
			      		</copy>
			      	</target>
			      </configuration>
			    </execution>
			  </executions>
			</plugin>
		      <plugin>
		        <artifactId>maven-war-plugin</artifactId>
		        <version>3.3.0</version>
		        <configuration>
		          <failOnMissingWebXml>false</failOnMissingWebXml>
		        </configuration>
		      </plugin>
 	 	</plugins>
	</build>
</project>
